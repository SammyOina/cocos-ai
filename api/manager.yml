openapi: 3.0.1
info:
  title: CoCos-AI Manager
  description: |
    The manager service creates a VM with CoCos-AI agent:
    - [The CoCos-AI repository](https://github.com/ultravioletrs/cocos-ai)
  contact:
    email: info@ultraviolet.com
  license:
    name: Apache 2.0
    url: https://github.com/ultravioletrs/cocos-ai/blob/main/LICENCE.md
  version: "1"

servers:
  - url: http://localhost:9021
  - url: https://localhost:9021
      
paths:
  /run:
    post:
      summary: Run computation on VM.
      description: |
        Send computation to agent. This creates agent virtual machine and sends
        computation manifest.
      requestBody:
        $ref: "#/components/requestBodies/Run"
      responses:
        "200":
          description: Computation manifest created successfully.
        "400":
          description: Request has malformed content.
        '500':
          $ref: "#/components/responses/ServiceError"
  /health:
    get:
      summary: Retrieves service health check info.
      tags:
        - health
      responses:
        '200':
          $ref: "#/components/responses/HealthRes"
        '500':
          $ref: "#/components/responses/ServiceError"

components:
  schemas:
    HealthRes:
      type: object
      properties:
        status:
          type: string
          description: Service status.
          enum:
            - pass
        version:
          type: string
          description: Service version.
          example: 0.0.1
        commit:
          type: string
          description: Service commit hash.
          example: 7d6f4dc4f7f0c1fa3dc24eddfb18bb5073ff4f62
        description:
          type: string
          description: Service description.
          example: <service_name> service
        build_time:
          type: string
          description: Service build time.
          example: 1970-01-01_00:00:00
  requestBodies:
    Run:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              computation:
                description: byte array of computation request as defined in ComputationReq
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  description:
                    type: string
                  datasets:
                    type: array
                    items:
                      type: object
                      properties:
                        provider:
                          type: string
                        id:
                          type: string
                  algorithms:
                    type: array
                    items:
                      type: object
                      properties:
                        provider:
                          type: string
                        id:
                          type: string
                  results_consumers:
                    type: array
                    items:
                      type: string
                  timeout:
                    type: string
                    example: "2s"

  responses:
    ServiceError:
      description: Unexpected server-side error occurred.
      
    HealthRes:
      description: Service Health Check.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/HealthRes"
